error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/parse.rs:218:17
    |
218 |         let a = s[0] as u64;
    |                 ^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/parse.rs:219:17
    |
219 |         let b = s[1] as u64;
    |                 ^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/parse.rs:220:17
    |
220 |         let c = s[2] as u64;
    |                 ^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/int_sqrt.rs:41:5
   |
41 |     U8_ISQRT_WITH_REMAINDER[n as usize].0
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/array/mod.rs:134:11
    |
134 |     match try_from_fn_erased(&mut array, cb) {
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/array/mod.rs:943:13
    |
943 |     let r = iter_next_chunk_erased(&mut array, iter);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: unsupported statement
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/enumerate.rs:87:17
   |
87 |                 *count += 1;
   |                 ^^^^^^^^^^^
   |
   = note: unsupported binary op `AddWithOverflow`

error[E0999]: unsupported statement
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/enumerate.rs:108:17
    |
108 |                 count += 1;
    |                 ^^^^^^^^^^
    |
    = note: unsupported binary op `AddWithOverflow`

error[E0999]: unsupported statement
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/iterator.rs:3014:21
     |
3014 |                     *acc += 1;
     |                     ^^^^^^^^^
     |
     = note: unsupported binary op `AddWithOverflow`

error[E0999]: internal flux error: crates/flux-infer/src/infer.rs:844:22
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/intrinsics/mod.rs:3863:9
     |
3863 |           const_eval_select(($($val,)*), compiletime, runtime)
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
    ::: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/panicking.rs:91:5
     |
91   | /     const_eval_select!(
92   | |         @capture { fmt: fmt::Arguments<'_>, force_no_backtrace: bool } -> !:
93   | |         if const #[track_caller] {
...    |
119  | |     )
     | |_____- in this macro invocation
     |
     = note: incompatible base types: `!` - `!`
     = note: this error originates in the macro `$crate::intrinsics::const_eval_select` which comes from the expansion of the macro `const_eval_select` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: refinement type error
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/float.rs:39:21
   |
39 |       let formatted = flt2dec::to_exact_fixed_str(
   |  _____________________^
40 | |         flt2dec::strategy::grisu::format_exact,
41 | |         *num,
42 | |         sign,
...  |
45 | |         &mut parts,
46 | |     );
   | |_____^ a precondition cannot be proved

error[E0999]: refinement type error
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/float.rs:67:21
   |
67 |       let formatted = flt2dec::to_shortest_str(
   |  _____________________^
68 | |         flt2dec::strategy::grisu::format_shortest,
69 | |         *num,
70 | |         sign,
...  |
73 | |         &mut parts,
74 | |     );
   | |_____^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/float.rs:112:21
    |
112 |       let formatted = flt2dec::to_exact_exp_str(
    |  _____________________^
113 | |         flt2dec::strategy::grisu::format_exact,
114 | |         *num,
115 | |         sign,
...   |
119 | |         &mut parts,
120 | |     );
    | |_____^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/float.rs:141:21
    |
141 |       let formatted = flt2dec::to_shortest_exp_str(
    |  _____________________^
142 | |         flt2dec::strategy::grisu::format_shortest,
143 | |         *num,
144 | |         sign,
...   |
148 | |         &mut parts,
149 | |     );
    | |_____^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:553:19
    |
553 |     let buf_ptr = MaybeUninit::slice_as_mut_ptr(buf);
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: assertion might fail: possible remainder with a divisor of zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:563:28
    |
563 |             let to_parse = n % 1e16 as u64;
    |                            ^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:564:13
    |
564 |             n /= 1e16 as u64;
    |             ^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:567:23
    |
567 |             let d1 = ((to_parse / 1e14 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible remainder with a divisor of zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:606:28
    |
606 |             let to_parse = n % 1e4 as u32;
    |                            ^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:568:23
    |
568 |             let d2 = ((to_parse / 1e12 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:607:13
    |
607 |             n /= 1e4 as u32;
    |             ^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:569:23
    |
569 |             let d3 = ((to_parse / 1e10 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:611:13
    |
611 |             *curr -= 4;
    |             ^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:570:23
    |
570 |             let d4 = ((to_parse / 1e8 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:571:23
    |
571 |             let d5 = ((to_parse / 1e6 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:572:23
    |
572 |             let d6 = ((to_parse / 1e4 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:573:23
    |
573 |             let d7 = ((to_parse / 1e2 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:574:23
    |
574 |             let d8 = ((to_parse / 1e0 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:576:13
    |
576 |             *curr -= 16;
    |             ^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:622:13
    |
622 |             *curr -= 2;
    |             ^^^^^^^^^^

error[E0999]: assertion might fail: possible remainder with a divisor of zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:588:28
    |
588 |             let to_parse = n % 1e8 as u64;
    |                            ^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:589:13
    |
589 |             n /= 1e8 as u64;
    |             ^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:592:23
    |
592 |             let d1 = ((to_parse / 1e6 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:632:13
    |
632 |             *curr -= 2;
    |             ^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:593:23
    |
593 |             let d2 = ((to_parse / 1e4 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:594:23
    |
594 |             let d3 = ((to_parse / 1e2 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:628:13
    |
628 |             *curr -= 1;
    |             ^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:595:23
    |
595 |             let d4 = ((to_parse / 1e0 as u64) % 100) << 1;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:596:13
    |
596 |             *curr -= 8;
    |             ^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:673:22
    |
673 |         let target = buf.len() - 19;
    |                      ^^^^^^^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:678:17
    |
678 |                 MaybeUninit::slice_as_mut_ptr(&mut buf).add(target),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:680:17
    |
680 |                 curr - target,
    |                 ^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:689:26
    |
689 |             let target = buf.len() - 38;
    |                          ^^^^^^^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:692:27
    |
692 |             let buf_ptr = MaybeUninit::slice_as_mut_ptr(&mut buf);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:696:61
    |
696 |                 ptr::write_bytes(buf_ptr.add(target), b'0', curr - target);
    |                                                             ^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:697:17
    |
697 |                 curr = target - 1;
    |                 ^^^^^^^^^^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:707:13
    |
707 |             MaybeUninit::slice_as_mut_ptr(&mut buf).add(curr),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:708:13
    |
708 |             buf.len() - curr,
    |             ^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/memchr.rs:41:12
   |
41 |         if text[i] == x {
   |            ^^^^^^^

error[E0999]: unsupported statement
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/ascii.rs:345:16
    |
345 |     while let [rest @ .., last] = bytes {
    |                ^^^^
    |
    = note: unsupported place `(*_1)[:-1]`

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/ascii.rs:502:21
    |
502 |         is_ascii &= bytes[i].is_ascii();
    |                     ^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/ascii.rs:489:22
    |
489 |             count += bytes[i].is_ascii() as u8;
    |                      ^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/raw.rs:209:5
    |
209 |     array::from_mut(s)
    |     ^^^^^^^^^^^^^^^^^^ a postcondition cannot be proved

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/validations.rs:161:17
    |
161 |                 v[index]
    |                 ^^^^^^^^
...
200 |                     if next!() as i8 >= -64 {
    |                        ------- in this macro invocation
    |
    = note: this error originates in the macro `next` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/validations.rs:161:17
    |
161 |                 v[index]
    |                 ^^^^^^^^
...
205 |                     match (first, next!()) {
    |                                   ------- in this macro invocation
    |
    = note: this error originates in the macro `next` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/validations.rs:242:38
    |
242 |                 while index < len && v[index] < 128 {
    |                                      ^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/validations.rs:165:21
    |
165 |         let first = v[index];
    |                     ^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/validations.rs:161:17
    |
161 |                 v[index]
    |                 ^^^^^^^^
...
188 |                     if next!() as i8 >= -64 {
    |                        ------- in this macro invocation
    |
    = note: this error originates in the macro `next` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/validations.rs:161:17
    |
161 |                 v[index]
    |                 ^^^^^^^^
...
209 |                     if next!() as i8 >= -64 {
    |                        ------- in this macro invocation
    |
    = note: this error originates in the macro `next` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/validations.rs:161:17
    |
161 |                 v[index]
    |                 ^^^^^^^^
...
212 |                     if next!() as i8 >= -64 {
    |                        ------- in this macro invocation
    |
    = note: this error originates in the macro `next` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/validations.rs:161:17
    |
161 |                 v[index]
    |                 ^^^^^^^^
...
193 |                     match (first, next!()) {
    |                                   ------- in this macro invocation
    |
    = note: this error originates in the macro `next` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/validations.rs:280:5
    |
280 |     UTF8_CHAR_WIDTH[b as usize] as usize
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/time.rs:1261:35
     |
1261 |                 buf[pos] = b'0' + (fractional_part / divisor) as u8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/time.rs:1261:17
     |
1261 |                 buf[pos] = b'0' + (fractional_part / divisor) as u8;
     |                 ^^^^^^^^

error[E0999]: assignment might be unsafe
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/time.rs:1261:17
     |
1261 |                 buf[pos] = b'0' + (fractional_part / divisor) as u8;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/time.rs:1286:24
     |
1286 |                     if buf[rev_pos] < b'9' {
     |                        ^^^^^^^^^^^^

error[E0999]: assignment might be unsafe
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/time.rs:1287:25
     |
1287 |                         buf[rev_pos] += 1;
     |                         ^^^^^^^^^^^^^^^^^

error[E0999]: unsupported terminator call
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/printable.rs:24:25
   |
24 |     while let Some(v) = normal.next() {
   |                         ^^^^^^^^^^^^^
   |
   = note: unsupported type `?8t`

error[E0999]: assertion might fail: possible division by zero
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:18:25
   |
18 |     let chunk_map_idx = bucket_idx / CHUNK_SIZE;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:22:9
   |
22 |         chunk_idx_map[chunk_map_idx]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:26:15
   |
26 |     let idx = bitset_chunk_idx[chunk_idx as usize][chunk_piece] as usize;
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:26:15
   |
26 |     let idx = bitset_chunk_idx[chunk_idx as usize][chunk_piece] as usize;
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:31:56
   |
31 |         let (real_idx, mapping) = bitset_canonicalized[idx - bitset_canonical.len()];
   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:31:35
   |
31 |         let (real_idx, mapping) = bitset_canonicalized[idx - bitset_canonical.len()];
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:32:24
   |
32 |         let mut word = bitset_canonical[real_idx as usize];
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:29:9
   |
29 |         bitset_canonical[idx]
   |         ^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:38:34
   |
38 |         let quantity = mapping & ((1 << 6) - 1);
   |                                  ^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:51:31
   |
51 |     short_offset_run_header & ((1 << 21) - 1)
   |                               ^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:84:62
   |
84 |         last_idx.checked_sub(1).map(|prev| decode_prefix_sum(short_offset_runs[prev])).unwrap_or(0);
   |                                                              ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:86:17
   |
86 |     let total = needle - prev;
   |                 ^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:88:17
   |
88 |     for _ in 0..(length - 1) {
   |                 ^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:77:40
   |
77 |     let mut offset_idx = decode_length(short_offset_runs[last_idx]);
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:79:9
   |
79 |         decode_length(*next) - offset_idx
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:81:9
   |
81 |         offsets.len() - offset_idx
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/unicode/unicode_data.rs:89:22
   |
89 |         let offset = offsets[offset_idx];
   |                      ^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/escape.rs:15:5
   |
15 |     output[0] = ascii::Char::ReverseSolidus;
   |     ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/escape.rs:16:5
   |
16 |     output[1] = a;
   |     ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/escape.rs:27:14
   |
27 |     let hi = HEX_DIGITS[(byte >> 4) as usize];
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/escape.rs:28:14
   |
28 |     let lo = HEX_DIGITS[(byte & 0xf) as usize];
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/escape.rs:30:5
   |
30 |     output[0] = ascii::Char::ReverseSolidus;
   |     ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/escape.rs:31:5
   |
31 |     output[1] = ascii::Char::SmallX;
   |     ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/escape.rs:32:5
   |
32 |     output[2] = hi;
   |     ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/escape.rs:33:5
   |
33 |     output[3] = lo;
   |     ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/escape.rs:44:5
   |
44 |     output[0] = a;
   |     ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/escape.rs:104:22
    |
104 |         let lookup = LOOKUP[byte as usize];
    |                      ^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/simd.rs:970:69
    |
970 |         &crate::array::from_fn::<&dyn crate::fmt::Debug, N, _>(|i| &array[i]),
    |                                                                     ^^^^^^^^

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/eflags.rs:35:5
   |
35 |     asm!("pushfq", "pop {}", out(reg) eflags, options(nomem, att_syntax));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/eflags.rs:35:5: 35:74 (#0), scope: scope[1] }, kind: asm!("pushfq
           pop {0}", out(reg) _1, options(NOMEM | ATT_SYNTAX)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/eflags.rs:66:5
   |
66 |     asm!("push {}", "popfq", in(reg) eflags, options(nomem, att_syntax));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/eflags.rs:66:5: 66:73 (#0), scope: scope[0] }, kind: asm!("push {0}
           popfq", in(reg) move _3, options(NOMEM | ATT_SYNTAX)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/cpuid.rs:77:9
   |
77 | /         asm!(
78 | |             "mov {0:r}, rbx",
79 | |             "cpuid",
80 | |             "xchg {0:r}, rbx",
...  |
85 | |             options(nostack, preserves_flags),
86 | |         );
   | |_________^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/cpuid.rs:77:9: 86:10 (#0), scope: scope[4] }, kind: asm!("mov {0:r}, rbx
           cpuid
           xchg {0:r}, rbx", out(reg) _4, inout("ax") move _9 => _3, inout("cx") move _10 => _5, out("dx") _6, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/sse.rs:1994:5
     |
1994 | /     crate::arch::asm!(
1995 | |         vps!("movntps", ",{a}"),
1996 | |         p = in(reg) mem_addr,
1997 | |         a = in(xmm_reg) a,
1998 | |         options(nostack, preserves_flags),
1999 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/sse.rs:1994:5: 1999:6 (#0), scope: scope[0] }, kind: asm!("movntps [{0}],{1}", in(reg) move _4, in(xmm_reg) move _5, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1312:5
     |
1312 | /     crate::arch::asm!(
1313 | |         vps!("movntdq",  ",{a}"),
1314 | |         p = in(reg) mem_addr,
1315 | |         a = in(xmm_reg) a,
1316 | |         options(nostack, preserves_flags),
1317 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1312:5: 1317:6 (#0), scope: scope[0] }, kind: asm!("movntdq [{0}],{1}", in(reg) move _4, in(xmm_reg) move _5, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1339:5
     |
1339 | /     crate::arch::asm!(
1340 | |         vps!("movnti", ",{a:e}"), // `:e` for 32bit value
1341 | |         p = in(reg) mem_addr,
1342 | |         a = in(reg) a,
1343 | |         options(nostack, preserves_flags),
1344 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1339:5: 1344:6 (#0), scope: scope[0] }, kind: asm!("movnti [{0}],{1:e}", in(reg) move _4, in(reg) move _5, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:2541:5
     |
2541 | /     crate::arch::asm!(
2542 | |         vps!("movntpd", ",{a}"),
2543 | |         p = in(reg) mem_addr,
2544 | |         a = in(xmm_reg) a,
2545 | |         options(nostack, preserves_flags),
2546 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:2541:5: 2546:6 (#0), scope: scope[0] }, kind: asm!("movntpd [{0}],{1}", in(reg) move _4, in(xmm_reg) move _5, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/sse41.rs:1080:5
     |
1080 | /     crate::arch::asm!(
1081 | |         vpl!("movntdqa {a}"),
1082 | |         a = out(xmm_reg) dst,
1083 | |         p = in(reg) mem_addr,
1084 | |         options(pure, readonly, nostack, preserves_flags),
1085 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/sse41.rs:1080:5: 1085:6 (#0), scope: scope[1] }, kind: asm!("movntdqa {0}, [{1}]", out(xmm_reg) _2, in(reg) move _4, options(PURE | READONLY | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx.rs:1736:5
     |
1736 | /     crate::arch::asm!(
1737 | |         vps!("vmovntdq", ",{a}"),
1738 | |         p = in(reg) mem_addr,
1739 | |         a = in(ymm_reg) a,
1740 | |         options(nostack, preserves_flags),
1741 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx.rs:1736:5: 1741:6 (#0), scope: scope[0] }, kind: asm!("vmovntdq [{0}],{1}", in(reg) move _4, in(ymm_reg) move _5, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx.rs:1764:5
     |
1764 | /     crate::arch::asm!(
1765 | |         vps!("vmovntpd", ",{a}"),
1766 | |         p = in(reg) mem_addr,
1767 | |         a = in(ymm_reg) a,
1768 | |         options(nostack, preserves_flags),
1769 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx.rs:1764:5: 1769:6 (#0), scope: scope[0] }, kind: asm!("vmovntpd [{0}],{1}", in(reg) move _4, in(ymm_reg) move _5, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx.rs:1793:5
     |
1793 | /     crate::arch::asm!(
1794 | |         vps!("vmovntps", ",{a}"),
1795 | |         p = in(reg) mem_addr,
1796 | |         a = in(ymm_reg) a,
1797 | |         options(nostack, preserves_flags),
1798 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx.rs:1793:5: 1798:6 (#0), scope: scope[0] }, kind: asm!("vmovntps [{0}],{1}", in(reg) move _4, in(ymm_reg) move _5, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx2.rs:3145:5
     |
3145 | /     crate::arch::asm!(
3146 | |         vpl!("vmovntdqa {a}"),
3147 | |         a = out(ymm_reg) dst,
3148 | |         p = in(reg) mem_addr,
3149 | |         options(pure, readonly, nostack, preserves_flags),
3150 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx2.rs:3145:5: 3150:6 (#0), scope: scope[1] }, kind: asm!("vmovntdqa {0}, [{1}]", out(ymm_reg) _2, in(reg) move _4, options(PURE | READONLY | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:28076:5
      |
28076 | /     crate::arch::asm!(
28077 | |         vps!("vmovntps", ",{a}"),
28078 | |         p = in(reg) mem_addr,
28079 | |         a = in(zmm_reg) a,
28080 | |         options(nostack, preserves_flags),
28081 | |     );
      | |_____^
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:28076:5: 28081:6 (#0), scope: scope[0] }, kind: asm!("vmovntps [{0}],{1}", in(reg) move _4, in(zmm_reg) move _5, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:28102:5
      |
28102 | /     crate::arch::asm!(
28103 | |         vps!("vmovntpd", ",{a}"),
28104 | |         p = in(reg) mem_addr,
28105 | |         a = in(zmm_reg) a,
28106 | |         options(nostack, preserves_flags),
28107 | |     );
      | |_____^
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:28102:5: 28107:6 (#0), scope: scope[0] }, kind: asm!("vmovntpd [{0}],{1}", in(reg) move _4, in(zmm_reg) move _5, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:28128:5
      |
28128 | /     crate::arch::asm!(
28129 | |         vps!("vmovntdq", ",{a}"),
28130 | |         p = in(reg) mem_addr,
28131 | |         a = in(zmm_reg) a,
28132 | |         options(nostack, preserves_flags),
28133 | |     );
      | |_____^
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:28128:5: 28133:6 (#0), scope: scope[0] }, kind: asm!("vmovntdq [{0}],{1}", in(reg) move _4, in(zmm_reg) move _5, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:28146:5
      |
28146 | /     crate::arch::asm!(
28147 | |         vpl!("vmovntdqa {a}"),
28148 | |         a = out(zmm_reg) dst,
28149 | |         p = in(reg) mem_addr,
28150 | |         options(pure, readonly, nostack, preserves_flags),
28151 | |     );
      | |_____^
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:28146:5: 28151:6 (#0), scope: scope[1] }, kind: asm!("vmovntdqa {0}, [{1}]", out(zmm_reg) _2, in(reg) move _4, options(PURE | READONLY | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:33677:5
      |
33677 | /     asm!(
33678 | |         vpl!("vmovss {dst}{{{k}}}"),
33679 | |         p = in(reg) mem_addr,
33680 | |         k = in(kreg) k,
33681 | |         dst = inout(xmm_reg) dst,
33682 | |         options(pure, readonly, nostack, preserves_flags),
33683 | |     );
      | |_____^
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:33677:5: 33683:6 (#0), scope: scope[1] }, kind: asm!("vmovss {2}{{{1}}}, [{0}]", in(reg) move _6, in(kreg) move _7, inout(xmm_reg) copy _4 => _4, options(PURE | READONLY | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:33699:5
      |
33699 | /     asm!(
33700 | |         vpl!("vmovss {dst}{{{k}}} {{z}}"),
33701 | |         p = in(reg) mem_addr,
33702 | |         k = in(kreg) k,
33703 | |         dst = out(xmm_reg) dst,
33704 | |         options(pure, readonly, nostack, preserves_flags),
33705 | |     );
      | |_____^
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:33699:5: 33705:6 (#0), scope: scope[1] }, kind: asm!("vmovss {2}{{{1}}} {{z}}, [{0}]", in(reg) move _5, in(kreg) move _6, out(xmm_reg) _3, options(PURE | READONLY | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:33721:5
      |
33721 | /     asm!(
33722 | |         vpl!("vmovsd {dst}{{{k}}}"),
33723 | |         p = in(reg) mem_addr,
33724 | |         k = in(kreg) k,
33725 | |         dst = inout(xmm_reg) dst,
33726 | |         options(pure, readonly, nostack, preserves_flags),
33727 | |     );
      | |_____^
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:33721:5: 33727:6 (#0), scope: scope[1] }, kind: asm!("vmovsd {2}{{{1}}}, [{0}]", in(reg) move _6, in(kreg) move _7, inout(xmm_reg) copy _4 => _4, options(PURE | READONLY | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:33743:5
      |
33743 | /     asm!(
33744 | |         vpl!("vmovsd {dst}{{{k}}} {{z}}"),
33745 | |         p = in(reg) mem_addr,
33746 | |         k = in(kreg) k,
33747 | |         dst = out(xmm_reg) dst,
33748 | |         options(pure, readonly, nostack, preserves_flags),
33749 | |     );
      | |_____^
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:33743:5: 33749:6 (#0), scope: scope[1] }, kind: asm!("vmovsd {2}{{{1}}} {{z}}, [{0}]", in(reg) move _5, in(kreg) move _6, out(xmm_reg) _3, options(PURE | READONLY | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:34050:5
      |
34050 | /     asm!(
34051 | |         vps!("vmovss", "{{{k}}}, {a}"),
34052 | |         p = in(reg) mem_addr,
34053 | |         k = in(kreg) k,
34054 | |         a = in(xmm_reg) a,
34055 | |         options(nostack, preserves_flags),
34056 | |     );
      | |_____^
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:34050:5: 34056:6 (#0), scope: scope[0] }, kind: asm!("vmovss [{0}]{{{1}}}, {2}", in(reg) move _5, in(kreg) move _6, in(xmm_reg) move _7, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:34068:5
      |
34068 | /     asm!(
34069 | |         vps!("vmovsd", "{{{k}}}, {a}"),
34070 | |         p = in(reg) mem_addr,
34071 | |         k = in(kreg) k,
34072 | |         a = in(xmm_reg) a,
34073 | |         options(nostack, preserves_flags),
34074 | |     );
      | |_____^
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs:34068:5: 34074:6 (#0), scope: scope[0] }, kind: asm!("vmovsd [{0}]{{{1}}}, {2}", in(reg) move _5, in(kreg) move _6, in(xmm_reg) move _7, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/bt.rs:29:5
   |
29 | /     asm!(
30 | |         bt!("btl"),
31 | |         "setc {r}",
32 | |         p = in(reg) p,
...  |
35 | |         options(readonly, nostack, pure, att_syntax)
36 | |     );
   | |_____^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/bt.rs:29:5: 36:6 (#0), scope: scope[1] }, kind: asm!("btl {1:e}, ({0})
           setc {2}", in(reg) move _5, in(reg) move _6, out(reg_byte) _3, options(PURE | READONLY | NOSTACK | ATT_SYNTAX)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/bt.rs:48:5
   |
48 | /     asm!(
49 | |         bt!("btsl"),
50 | |         "setc {r}",
51 | |         p = in(reg) p,
...  |
54 | |         options(nostack, att_syntax)
55 | |     );
   | |_____^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/bt.rs:48:5: 55:6 (#0), scope: scope[1] }, kind: asm!("btsl {1:e}, ({0})
           setc {2}", in(reg) move _5, in(reg) move _6, out(reg_byte) _3, options(NOSTACK | ATT_SYNTAX)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/bt.rs:67:5
   |
67 | /     asm!(
68 | |         bt!("btrl"),
69 | |         "setc {r}",
70 | |         p = in(reg) p,
...  |
73 | |         options(nostack, att_syntax)
74 | |     );
   | |_____^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/bt.rs:67:5: 74:6 (#0), scope: scope[1] }, kind: asm!("btrl {1:e}, ({0})
           setc {2}", in(reg) move _5, in(reg) move _6, out(reg_byte) _3, options(NOSTACK | ATT_SYNTAX)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/bt.rs:86:5
   |
86 | /     asm!(
87 | |         bt!("btcl"),
88 | |         "setc {r}",
89 | |         p = in(reg) p,
...  |
92 | |         options(nostack, att_syntax)
93 | |     );
   | |_____^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/bt.rs:86:5: 93:6 (#0), scope: scope[1] }, kind: asm!("btcl {1:e}, ({0})
           setc {2}", in(reg) move _5, in(reg) move _6, out(reg_byte) _3, options(NOSTACK | ATT_SYNTAX)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512bf16.rs:494:5
    |
494 | /     asm!(
495 | |         "vcvtneps2bf16 {dst}, {src}",
496 | |         dst = lateout(xmm_reg) dst,
497 | |         src = in(xmm_reg) a,
498 | |         options(pure, nomem, nostack, preserves_flags)
499 | |     );
    | |_____^
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512bf16.rs:494:5: 499:6 (#0), scope: scope[1] }, kind: asm!("vcvtneps2bf16 {0}, {1}", lateout(xmm_reg) _2, in(xmm_reg) move _4, options(PURE | NOMEM | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512bf16.rs:514:5
    |
514 | /     asm!(
515 | |         "vcvtneps2bf16 {dst}{{{k}}},{src}",
516 | |         dst = inlateout(xmm_reg) dst,
517 | |         src = in(xmm_reg) a,
518 | |         k = in(kreg) k,
519 | |         options(pure, nomem, nostack, preserves_flags)
520 | |     );
    | |_____^
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512bf16.rs:514:5: 520:6 (#0), scope: scope[1] }, kind: asm!("vcvtneps2bf16 {0}{{{2}}},{1}", inlateout(xmm_reg) copy _4 => _4, in(xmm_reg) move _6, in(kreg) move _7, options(PURE | NOMEM | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512bf16.rs:535:5
    |
535 | /     asm!(
536 | |         "vcvtneps2bf16 {dst}{{{k}}}{{z}},{src}",
537 | |         dst = lateout(xmm_reg) dst,
538 | |         src = in(xmm_reg) a,
539 | |         k = in(kreg) k,
540 | |         options(pure, nomem, nostack, preserves_flags)
541 | |     );
    | |_____^
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512bf16.rs:535:5: 541:6 (#0), scope: scope[1] }, kind: asm!("vcvtneps2bf16 {0}{{{2}}}{{z}},{1}", lateout(xmm_reg) _3, in(xmm_reg) move _5, in(kreg) move _6, options(PURE | NOMEM | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avxneconvert.rs:204:5
    |
204 | /     asm!(
205 | |         "{{vex}}vcvtneps2bf16 {dst},{src}",
206 | |         dst = lateout(xmm_reg) dst,
207 | |         src = in(xmm_reg) a,
208 | |         options(pure, nomem, nostack, preserves_flags)
209 | |     );
    | |_____^
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avxneconvert.rs:204:5: 209:6 (#0), scope: scope[1] }, kind: asm!("{{vex}}vcvtneps2bf16 {0},{1}", lateout(xmm_reg) _2, in(xmm_reg) move _4, options(PURE | NOMEM | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avxneconvert.rs:226:5
    |
226 | /     asm!(
227 | |         "{{vex}}vcvtneps2bf16 {dst},{src}",
228 | |         dst = lateout(xmm_reg) dst,
229 | |         src = in(ymm_reg) a,
230 | |         options(pure, nomem, nostack, preserves_flags)
231 | |     );
    | |_____^
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avxneconvert.rs:226:5: 231:6 (#0), scope: scope[1] }, kind: asm!("{{vex}}vcvtneps2bf16 {0},{1}", lateout(xmm_reg) _2, in(ymm_reg) move _4, options(PURE | NOMEM | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:640:9
    |
640 | /         asm!(
641 | |             "vcmpph {k}, {a}, {b}, {imm8}",
642 | |             k = lateout(kreg) dst,
643 | |             a = in($reg) $a,
...   |
646 | |             options(pure, nomem, nostack)
647 | |         );
    | |_________^
...
675 |       cmp_asm!(__mmask8, xmm_reg, a, b)
    |       --------------------------------- in this macro invocation
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:640:9: 647:10 (#36021), scope: scope[2] }, kind: asm!("vcmpph {0}, {1}, {2}, {3}", lateout(kreg) _4, in(xmm_reg) move _6, in(xmm_reg) move _7, const const core_arch::x86::avx512fp16::_mm_cmp_ph_mask::<IMM5>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
    = note: this error originates in the macro `cmp_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:652:9
    |
652 | /         asm!(
653 | |             "vcmpph {k} {{ {mask} }}, {a}, {b}, {imm8}",
654 | |             k = lateout(kreg) dst,
655 | |             mask = in(kreg) $mask,
...   |
659 | |             options(pure, nomem, nostack)
660 | |         );
    | |_________^
...
693 |       cmp_asm!(__mmask8, k1, xmm_reg, a, b)
    |       ------------------------------------- in this macro invocation
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:652:9: 660:10 (#36031), scope: scope[2] }, kind: asm!("vcmpph {0} {{ {1} }}, {2}, {3}, {4}", lateout(kreg) _5, in(kreg) move _7, in(xmm_reg) move _8, in(xmm_reg) move _9, const const core_arch::x86::avx512fp16::_mm_mask_cmp_ph_mask::<IMM5>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
    = note: this error originates in the macro `cmp_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:640:9
    |
640 | /         asm!(
641 | |             "vcmpph {k}, {a}, {b}, {imm8}",
642 | |             k = lateout(kreg) dst,
643 | |             a = in($reg) $a,
...   |
646 | |             options(pure, nomem, nostack)
647 | |         );
    | |_________^
...
706 |       cmp_asm!(__mmask16, ymm_reg, a, b)
    |       ---------------------------------- in this macro invocation
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:640:9: 647:10 (#36041), scope: scope[2] }, kind: asm!("vcmpph {0}, {1}, {2}, {3}", lateout(kreg) _4, in(ymm_reg) move _6, in(ymm_reg) move _7, const const core_arch::x86::avx512fp16::_mm256_cmp_ph_mask::<IMM5>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
    = note: this error originates in the macro `cmp_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:652:9
    |
652 | /         asm!(
653 | |             "vcmpph {k} {{ {mask} }}, {a}, {b}, {imm8}",
654 | |             k = lateout(kreg) dst,
655 | |             mask = in(kreg) $mask,
...   |
659 | |             options(pure, nomem, nostack)
660 | |         );
    | |_________^
...
724 |       cmp_asm!(__mmask16, k1, ymm_reg, a, b)
    |       -------------------------------------- in this macro invocation
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:652:9: 660:10 (#36051), scope: scope[2] }, kind: asm!("vcmpph {0} {{ {1} }}, {2}, {3}, {4}", lateout(kreg) _5, in(kreg) move _7, in(ymm_reg) move _8, in(ymm_reg) move _9, const const core_arch::x86::avx512fp16::_mm256_mask_cmp_ph_mask::<IMM5>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
    = note: this error originates in the macro `cmp_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:640:9
    |
640 | /         asm!(
641 | |             "vcmpph {k}, {a}, {b}, {imm8}",
642 | |             k = lateout(kreg) dst,
643 | |             a = in($reg) $a,
...   |
646 | |             options(pure, nomem, nostack)
647 | |         );
    | |_________^
...
737 |       cmp_asm!(__mmask32, zmm_reg, a, b)
    |       ---------------------------------- in this macro invocation
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:640:9: 647:10 (#36061), scope: scope[2] }, kind: asm!("vcmpph {0}, {1}, {2}, {3}", lateout(kreg) _4, in(zmm_reg) move _6, in(zmm_reg) move _7, const const core_arch::x86::avx512fp16::_mm512_cmp_ph_mask::<IMM5>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
    = note: this error originates in the macro `cmp_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:652:9
    |
652 | /         asm!(
653 | |             "vcmpph {k} {{ {mask} }}, {a}, {b}, {imm8}",
654 | |             k = lateout(kreg) dst,
655 | |             mask = in(kreg) $mask,
...   |
659 | |             options(pure, nomem, nostack)
660 | |         );
    | |_________^
...
755 |       cmp_asm!(__mmask32, k1, zmm_reg, a, b)
    |       -------------------------------------- in this macro invocation
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:652:9: 660:10 (#36071), scope: scope[2] }, kind: asm!("vcmpph {0} {{ {1} }}, {2}, {3}, {4}", lateout(kreg) _5, in(kreg) move _7, in(zmm_reg) move _8, in(zmm_reg) move _9, const const core_arch::x86::avx512fp16::_mm512_mask_cmp_ph_mask::<IMM5>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
    = note: this error originates in the macro `cmp_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:776:9
    |
776 | /         asm!(
777 | |             "vcmpph {k}, {a}, {b}, {{sae}}, {imm8}",
778 | |             k = lateout(kreg) dst,
779 | |             a = in(zmm_reg) a,
...   |
782 | |             options(pure, nomem, nostack)
783 | |         );
    | |_________^
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:776:9: 783:10 (#0), scope: scope[2] }, kind: asm!("vcmpph {0}, {1}, {2}, {{sae}}, {3}", lateout(kreg) _6, in(zmm_reg) move _8, in(zmm_reg) move _9, const const core_arch::x86::avx512fp16::_mm512_cmp_round_ph_mask::<IMM5, SAE>::{constant#2}, options(PURE | NOMEM | NOSTACK)) -> [return: bb2, unwind unreachable] }

error[E0999]: unsupported terminator
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:810:9
    |
810 | /         asm!(
811 | |             "vcmpph {k} {{{k1}}}, {a}, {b}, {{sae}}, {imm8}",
812 | |             k = lateout(kreg) dst,
813 | |             k1 = in(kreg) k1,
...   |
817 | |             options(pure, nomem, nostack)
818 | |         );
    | |_________^
    |
    = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:810:9: 818:10 (#0), scope: scope[2] }, kind: asm!("vcmpph {0} {{{1}}}, {2}, {3}, {{sae}}, {4}", lateout(kreg) _7, in(kreg) move _9, in(zmm_reg) move _10, in(zmm_reg) move _11, const const core_arch::x86::avx512fp16::_mm512_mask_cmp_round_ph_mask::<IMM5, SAE>::{constant#2}, options(PURE | NOMEM | NOSTACK)) -> [return: bb2, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:1105:5
     |
1105 | /     asm!(
1106 | |         vpl!("vmovsh {dst}{{{k}}}"),
1107 | |         dst = inout(xmm_reg) dst,
1108 | |         k = in(kreg) k,
1109 | |         p = in(reg) mem_addr,
1110 | |         options(pure, readonly, nostack, preserves_flags)
1111 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:1105:5: 1111:6 (#0), scope: scope[1] }, kind: asm!("vmovsh {0}{{{1}}}, [{2}]", inout(xmm_reg) copy _4 => _4, in(kreg) move _6, in(reg) move _7, options(PURE | READONLY | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:1124:5
     |
1124 | /     asm!(
1125 | |         vpl!("vmovsh {dst}{{{k}}}{{z}}"),
1126 | |         dst = out(xmm_reg) dst,
1127 | |         k = in(kreg) k,
1128 | |         p = in(reg) mem_addr,
1129 | |         options(pure, readonly, nostack, preserves_flags)
1130 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:1124:5: 1130:6 (#0), scope: scope[1] }, kind: asm!("vmovsh {0}{{{1}}}{{z}}, [{2}]", out(xmm_reg) _3, in(kreg) move _5, in(reg) move _6, options(PURE | READONLY | PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:1261:5
     |
1261 | /     asm!(
1262 | |         vps!("vmovdqu16", "{{{k}}}, {src}"),
1263 | |         p = in(reg) mem_addr,
1264 | |         k = in(kreg) k,
1265 | |         src = in(xmm_reg) a,
1266 | |         options(nostack, preserves_flags)
1267 | |     );
     | |_____^
     |
     = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:1261:5: 1267:6 (#0), scope: scope[0] }, kind: asm!("vmovdqu16 [{0}]{{{1}}}, {2}", in(reg) move _5, in(kreg) move _6, in(xmm_reg) move _7, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11014:9
      |
11014 | /         asm!(
11015 | |             "vfpclassph {k}, {src}, {imm8}",
11016 | |             k = lateout(kreg) dst,
11017 | |             src = in($reg) $a,
11018 | |             imm8 = const IMM8,
11019 | |             options(pure, nomem, nostack)
11020 | |         );
      | |_________^
...
11058 |       fpclass_asm!(__mmask8, xmm_reg, a)
      |       ---------------------------------- in this macro invocation
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11014:9: 11020:10 (#37915), scope: scope[2] }, kind: asm!("vfpclassph {0}, {1}, {2}", lateout(kreg) _3, in(xmm_reg) move _5, const const core_arch::x86::avx512fp16::_mm_fpclass_ph_mask::<IMM8>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
      = note: this error originates in the macro `fpclass_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11025:9
      |
11025 | /         asm!(
11026 | |             "vfpclassph {k} {{ {mask} }}, {src}, {imm8}",
11027 | |             k = lateout(kreg) dst,
11028 | |             mask = in(kreg) $mask,
...     |
11031 | |             options(pure, nomem, nostack)
11032 | |         );
      | |_________^
...
11083 |       fpclass_asm!(__mmask8, k1, xmm_reg, a)
      |       -------------------------------------- in this macro invocation
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11025:9: 11032:10 (#37925), scope: scope[2] }, kind: asm!("vfpclassph {0} {{ {1} }}, {2}, {3}", lateout(kreg) _4, in(kreg) move _6, in(xmm_reg) move _7, const const core_arch::x86::avx512fp16::_mm_mask_fpclass_ph_mask::<IMM8>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
      = note: this error originates in the macro `fpclass_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11014:9
      |
11014 | /         asm!(
11015 | |             "vfpclassph {k}, {src}, {imm8}",
11016 | |             k = lateout(kreg) dst,
11017 | |             src = in($reg) $a,
11018 | |             imm8 = const IMM8,
11019 | |             options(pure, nomem, nostack)
11020 | |         );
      | |_________^
...
11107 |       fpclass_asm!(__mmask16, ymm_reg, a)
      |       ----------------------------------- in this macro invocation
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11014:9: 11020:10 (#37935), scope: scope[2] }, kind: asm!("vfpclassph {0}, {1}, {2}", lateout(kreg) _3, in(ymm_reg) move _5, const const core_arch::x86::avx512fp16::_mm256_fpclass_ph_mask::<IMM8>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
      = note: this error originates in the macro `fpclass_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11025:9
      |
11025 | /         asm!(
11026 | |             "vfpclassph {k} {{ {mask} }}, {src}, {imm8}",
11027 | |             k = lateout(kreg) dst,
11028 | |             mask = in(kreg) $mask,
...     |
11031 | |             options(pure, nomem, nostack)
11032 | |         );
      | |_________^
...
11132 |       fpclass_asm!(__mmask16, k1, ymm_reg, a)
      |       --------------------------------------- in this macro invocation
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11025:9: 11032:10 (#37945), scope: scope[2] }, kind: asm!("vfpclassph {0} {{ {1} }}, {2}, {3}", lateout(kreg) _4, in(kreg) move _6, in(ymm_reg) move _7, const const core_arch::x86::avx512fp16::_mm256_mask_fpclass_ph_mask::<IMM8>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
      = note: this error originates in the macro `fpclass_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11014:9
      |
11014 | /         asm!(
11015 | |             "vfpclassph {k}, {src}, {imm8}",
11016 | |             k = lateout(kreg) dst,
11017 | |             src = in($reg) $a,
11018 | |             imm8 = const IMM8,
11019 | |             options(pure, nomem, nostack)
11020 | |         );
      | |_________^
...
11156 |       fpclass_asm!(__mmask32, zmm_reg, a)
      |       ----------------------------------- in this macro invocation
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11014:9: 11020:10 (#37955), scope: scope[2] }, kind: asm!("vfpclassph {0}, {1}, {2}", lateout(kreg) _3, in(zmm_reg) move _5, const const core_arch::x86::avx512fp16::_mm512_fpclass_ph_mask::<IMM8>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
      = note: this error originates in the macro `fpclass_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
     --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11025:9
      |
11025 | /         asm!(
11026 | |             "vfpclassph {k} {{ {mask} }}, {src}, {imm8}",
11027 | |             k = lateout(kreg) dst,
11028 | |             mask = in(kreg) $mask,
...     |
11031 | |             options(pure, nomem, nostack)
11032 | |         );
      | |_________^
...
11181 |       fpclass_asm!(__mmask32, k1, zmm_reg, a)
      |       --------------------------------------- in this macro invocation
      |
      = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs:11025:9: 11032:10 (#37965), scope: scope[2] }, kind: asm!("vfpclassph {0} {{ {1} }}, {2}, {3}", lateout(kreg) _4, in(kreg) move _6, in(zmm_reg) move _7, const const core_arch::x86::avx512fp16::_mm512_mask_fpclass_ph_mask::<IMM8>::{constant#1}, options(PURE | NOMEM | NOSTACK)) -> [return: bb1, unwind unreachable] }
      = note: this error originates in the macro `fpclass_asm` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86_64/sse2.rs:81:5
   |
81 | /     crate::arch::asm!(
82 | |         vps!("movnti", ",{a}"),
83 | |         p = in(reg) mem_addr,
84 | |         a = in(reg) a,
85 | |         options(nostack, preserves_flags),
86 | |     );
   | |_____^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86_64/sse2.rs:81:5: 86:6 (#0), scope: scope[0] }, kind: asm!("movnti [{0}],{1}", in(reg) move _4, in(reg) move _5, options(PRESERVES_FLAGS | NOSTACK)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bt.rs:29:5
   |
29 | /     asm!(
30 | |         bt!("btq"),
31 | |         "setc {r}",
32 | |         p = in(reg) p,
...  |
35 | |         options(readonly, nostack, pure, att_syntax)
36 | |     );
   | |_____^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bt.rs:29:5: 36:6 (#0), scope: scope[1] }, kind: asm!("btq {1}, ({0})
           setc {2}", in(reg) move _5, in(reg) move _6, out(reg_byte) _3, options(PURE | READONLY | NOSTACK | ATT_SYNTAX)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bt.rs:48:5
   |
48 | /     asm!(
49 | |         bt!("btsq"),
50 | |         "setc {r}",
51 | |         p = in(reg) p,
...  |
54 | |         options(nostack, att_syntax)
55 | |     );
   | |_____^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bt.rs:48:5: 55:6 (#0), scope: scope[1] }, kind: asm!("btsq {1}, ({0})
           setc {2}", in(reg) move _5, in(reg) move _6, out(reg_byte) _3, options(NOSTACK | ATT_SYNTAX)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bt.rs:67:5
   |
67 | /     asm!(
68 | |         bt!("btrq"),
69 | |         "setc {r}",
70 | |         p = in(reg) p,
...  |
73 | |         options(nostack, att_syntax)
74 | |     );
   | |_____^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bt.rs:67:5: 74:6 (#0), scope: scope[1] }, kind: asm!("btrq {1}, ({0})
           setc {2}", in(reg) move _5, in(reg) move _6, out(reg_byte) _3, options(NOSTACK | ATT_SYNTAX)) -> [return: bb1, unwind unreachable] }

error[E0999]: unsupported terminator
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bt.rs:86:5
   |
86 | /     asm!(
87 | |         bt!("btcq"),
88 | |         "setc {r}",
89 | |         p = in(reg) p,
...  |
92 | |         options(nostack, att_syntax)
93 | |     );
   | |_____^
   |
   = note: Terminator { source_info: SourceInfo { span: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bt.rs:86:5: 93:6 (#0), scope: scope[1] }, kind: asm!("btcq {1}, ({0})
           setc {2}", in(reg) move _5, in(reg) move _6, out(reg_byte) _3, options(NOSTACK | ATT_SYNTAX)) -> [return: bb1, unwind unreachable] }

error[E0999]: assignment might be unsafe
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../portable-simd/crates/core_simd/src/swizzle.rs:288:17
    |
288 |                 idx[i] = src_index;
    |                 ^^^^^^^^^^^^^^^^^^

error[E0999]: assignment might be unsafe
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../portable-simd/crates/core_simd/src/swizzle.rs:337:17
    |
337 |                 idx[i] = i * 2 + second as usize;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../portable-simd/crates/core_simd/src/vector.rs:1202:9
     |
1202 |         index[i] = i;
     |         ^^^^^^^^

error[E0999]: assignment might be unsafe
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../portable-simd/crates/core_simd/src/vector.rs:1202:9
     |
1202 |         index[i] = i;
     |         ^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/double_ended.rs:142:60
    |
142 |                 return Err(unsafe { NonZero::new_unchecked(n - i) });
    |                                                            ^^^^^

error[E0999]: unsupported statement
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/iterator.rs:228:24
    |
228 |             |count, _| count + 1,
    |                        ^^^^^^^^^
    |
    = note: unsupported binary op `AddWithOverflow`

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/iterator.rs:300:60
    |
300 |                 return Err(unsafe { NonZero::new_unchecked(n - i) });
    |                                                            ^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:71:17
   |
71 |                 curr -= 1;
   |                 ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:72:17
   |
72 |                 buf[curr].write(Self::digit(n.to_u8())); // Store the digit in the buffer.
   |                 ^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:83:17
   |
83 |                 curr -= 1;
   |                 ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/num.rs:84:17
   |
84 |                 buf[curr].write(Self::digit(n.to_u8())); // Store the digit in the buffer.
   |                 ^^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/mod.rs:190:24
    |
190 |         self.write_str(c.encode_utf8(&mut [0; 4]))
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/f128.rs:542:13
    |
542 |             bits - 1
    |             ^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/f16.rs:535:13
    |
535 |             bits - 1
    |             ^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/f32.rs:761:13
    |
761 |             bits - 1
    |             ^^^^^^^^

error[E0999]: unsupported statement
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/f32.rs:1013:19
     |
1013 |                 ((self as f64 + other as f64) / 2.0) as f32
     |                   ^^^^^^^^^^^
     |
     = note: unsupported cast `FloatToFloat`

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/f64.rs:778:13
    |
778 |             bits - 1
    |             ^^^^^^^^

error[E0999]: refinement type error
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/common.rs:24:9
   |
24 |         tmp.copy_from_slice(&self[..8]);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:66:13
   |
66 |             self.digits[self.num_digits] = digit;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:81:51
   |
81 |         while self.num_digits != 0 && self.digits[self.num_digits - 1] == 0 {
   |                                                   ^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:81:39
   |
81 |         while self.num_digits != 0 && self.digits[self.num_digits - 1] == 0 {
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:82:13
   |
82 |             self.num_digits -= 1;
   |             ^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:102:24
    |
102 |             round_up = self.digits[dp] >= 5;
    |                        ^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:97:22
   |
97 |                 n += self.digits[i] as u64;
   |                      ^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:136:13
    |
136 |             write_index -= 1;
    |             ^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:124:13
    |
124 |             write_index -= 1;
    |             ^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:125:19
    |
125 |             n += (self.digits[read_index] as u64) << shift;
    |                   ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:181:20
    |
181 |         let mask = (1_u64 << shift) - 1;
    |                    ^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:184:37
    |
184 |             n = (10 * (n & mask)) + self.digits[read_index] as u64;
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/decimal.rs:161:32
    |
161 |                 n = (10 * n) + self.digits[read_index] as u64;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/float.rs:136:9
    |
136 |         TABLE[exponent & 15]
    |         ^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/float.rs:190:9
    |
190 |         TABLE[exponent & 31]
    |         ^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/dec2flt/number.rs:74:58
   |
74 |                 let mantissa = self.mantissa.checked_mul(INT_POW10[shift as usize])?;
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: internal flux error: /Users/Exelica/Downloads/project/flux/crates/flux-infer/src/infer.rs:844:22
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/num/error.rs:40:5
   |
40 |     fn from(never: !) -> TryFromIntError {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: incompatible base types: `!` - `!`

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/ptr/const_ptr.rs:1483:23
     |
1483 |         self.addr() & (align - 1) == 0
     |                       ^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/ptr/mut_ptr.rs:1736:23
     |
1736 |         self.addr() & (align - 1) == 0
     |                       ^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/ptr/mut_ptr.rs:1889:56
     |
1889 |             crate::ptr::slice_from_raw_parts_mut(tail, len - mid),
     |                                                        ^^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/borrow.rs:239:5
    |
239 |     fn borrow_mut(&mut self) -> &mut T {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/convert/mod.rs:735:5
    |
735 |     fn as_mut(&mut self) -> &mut U {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/ops/deref.rs:277:5
    |
277 |     fn deref_mut(&mut self) -> &mut T {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/ops/function.rs:271:9
    |
271 |         extern "rust-call" fn call_mut(&mut self, args: A) -> F::Output {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/ops/function.rs:293:9
    |
293 |         extern "rust-call" fn call_mut(&mut self, args: A) -> F::Output {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/array/iter.rs:226:25
    |
226 |             let slice = self.data.get_unchecked_mut(self.alive.clone());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/array/mod.rs:214:9
    |
214 |         self
    |         ^^^^ a postcondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/array/mod.rs:353:9
    |
353 |         self.iter_mut()
    |         ^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/array/mod.rs:377:9
    |
377 |         IndexMut::index_mut(self as &mut [T], index)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/array/mod.rs:427:9
    |
427 |         self.clone_from_slice(other);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/ascii/ascii_char.rs:609:26
    |
609 |                 let hi = HEX_DIGITS[usize::from(byte >> 4)];
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/ascii/ascii_char.rs:610:26
    |
610 |                 let lo = HEX_DIGITS[usize::from(byte & 0xf)];
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/bstr.rs:248:9
    |
248 |         ByteStr::from_bytes_mut(&mut [])
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/bstr.rs:312:10
    |
312 |         &self.0[idx]
    |          ^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/ffi/c_str.rs:527:9
    |
527 |         self.inner.len() - 1
    |         ^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/ffi/c_str.rs:585:56
    |
585 |         unsafe { slice::from_raw_parts(bytes.as_ptr(), bytes.len() - 1) }
    |                                                        ^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/io/borrowed_buf.rs:218:9
    |
218 |         self.buf.capacity() - self.buf.filled
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/io/borrowed_buf.rs:227:9
    |
227 |         self.buf.filled - self.start
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/array_chunks.rs:143:13
    |
143 |             chunk.reverse();
    |             ^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: assertion might fail: possible remainder with a divisor of zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/array_chunks.rs:167:19
    |
167 |         let rem = self.iter.len() % N;
    |                   ^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/array_chunks.rs:193:9
    |
193 |         self.iter.len() / N
    |         ^^^^^^^^^^^^^^^^^^^

error[E0999]: unsupported terminator call
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/cloned.rs:65:9
   |
65 |         self.it.map(T::clone).fold(init, f)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: unsupported type `?0t`

error[E0999]: unsupported terminator call
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/cloned.rs:103:9
    |
103 |         self.it.map(T::clone).rfold(init, f)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: unsupported type `?0t`

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/copied.rs:250:62
    |
250 |             ptr::copy_nonoverlapping(self.as_ref().as_ptr(), raw_array.as_mut_ptr() as *mut T, N);
    |                                                              ^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/copied.rs:239:21
    |
239 |                     raw_array.as_mut_ptr() as *mut T,
    |                     ^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: unsupported statement
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/enumerate.rs:49:9
   |
49 |         self.count += 1;
   |         ^^^^^^^^^^^^^^^
   |
   = note: unsupported binary op `AddWithOverflow`

error[E0999]: unsupported statement
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/enumerate.rs:62:17
   |
62 |         let i = self.count + n;
   |                 ^^^^^^^^^^^^^^
   |
   = note: unsupported binary op `AddWithOverflow`

error[E0999]: unsupported statement
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/enumerate.rs:122:25
    |
122 |             Err(rem) => n - rem.get(),
    |                         ^^^^^^^^^^^^^
    |
    = note: unsupported binary op `SubWithOverflow`

error[E0999]: unsupported statement
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/enumerate.rs:137:10
    |
137 |         (self.count + idx, value)
    |          ^^^^^^^^^^^^^^^^
    |
    = note: unsupported binary op `AddWithOverflow`

error[E0999]: refinement type error
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/filter.rs:50:22
   |
50 |             unsafe { array.get_unchecked_mut(idx) }.write(element);
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: unsupported statement
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/mem/mod.rs:1375:6
     |
1375 |     {builtin # offset_of($Container, $($fields)+)}
     |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
    ::: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/filter_map.rs:101:47
     |
101  |                     (&raw const val).byte_add(core::mem::offset_of!(Option<B>, Some.0)).cast();
     |                                               ---------------------------------------- in this macro invocation
     |
     = note: unsupported nullary op `OffsetOf([(1, 0)])`
     = note: this error originates in the macro `core::mem::offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/map_windows.rs:102:32
    |
102 |             (lo.saturating_sub(N - 1), hi.map(|hi| hi.saturating_sub(N - 1)))
    |                                ^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/map_windows.rs:102:70
    |
102 |             (lo.saturating_sub(N - 1), hi.map(|hi| hi.saturating_sub(N - 1)))
    |                                                                      ^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/map_windows.rs:122:9
    |
122 |         self.buffer.as_mut_ptr().cast()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/map_windows.rs:168:94
    |
168 |                 ptr::copy_nonoverlapping(buffer_mut_ptr.add(self.start + 1), buffer_mut_ptr, N - 1);
    |                                                                                              ^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/map_windows.rs:169:38
    |
169 |                 (*buffer_mut_ptr.add(N - 1)).write(next);
    |                                      ^^^^^

error[E0999]: unsupported statement
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/peekable.rs:50:30
   |
50 |             Some(Some(_)) => 1 + self.iter.count(),
   |                              ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: unsupported binary op `AddWithOverflow`

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/skip.rs:59:35
   |
59 |                     self.iter.nth(skip - 1)?;
   |                                   ^^^^^^^^

error[E0999]: unsupported statement
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/skip.rs:145:30
    |
145 |         let advanced_inner = skip_and_advance - remainder;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: unsupported binary op `SubWithOverflow`

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/take.rs:38:13
   |
38 |             self.n -= 1;
   |             ^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/take.rs:52:31
   |
52 |                 self.iter.nth(self.n - 1);
   |                               ^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/take.rs:48:13
   |
48 |             self.n -= n + 1;
   |             ^^^^^^^^^^^^^^^

error[E0999]: unsupported statement
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/take.rs:124:24
    |
124 |         let advanced = min - rem;
    |                        ^^^^^^^^^
    |
    = note: unsupported binary op `SubWithOverflow`

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/take.rs:161:13
    |
161 |             self.n -= 1;
    |             ^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/take.rs:171:13
    |
171 |             self.n -= n + 1;
    |             ^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/take.rs:192:51
    |
192 |             if len > self.n && self.iter.nth_back(len - self.n - 1).is_none() {
    |                                                   ^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/take.rs:192:51
    |
192 |             if len > self.n && self.iter.nth_back(len - self.n - 1).is_none() {
    |                                                   ^^^^^^^^^^^^^^^^

error[E0999]: unsupported statement
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/adapters/take.rs:233:33
    |
233 |         let advanced_by_inner = advance_by - remainder;
    |                                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: unsupported binary op `SubWithOverflow`

error[E0999]: unsupported terminator call
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/sources/once_with.rs:106:9
    |
106 |         self.next()
    |         ^^^^^^^^^^^
    |
    = note: unsupported type `?0t`

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/double_ended.rs:374:5
    |
374 |     fn next_back(&mut self) -> Option<I::Item> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/double_ended.rs:377:5
    |
377 |     fn advance_back_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/double_ended.rs:380:5
    |
380 |     fn nth_back(&mut self, n: usize) -> Option<I::Item> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/double_ended.rs:389:5
    |
389 | /     fn try_rfold<B, F, R>(&mut self, init: B, f: F) -> R
390 | |     where
391 | |         F: FnMut(B, Self::Item) -> R,
392 | |         R: Try<Output = B>,
    | |___________________________^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/double_ended.rs:422:5
    |
422 | /     default fn spec_try_rfold<B, F, R>(&mut self, init: B, mut f: F) -> R
423 | |     where
424 | |         F: FnMut(B, Self::Item) -> R,
425 | |         R: Try<Output = B>,
    | |___________________________^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/double_ended.rs:438:5
    |
438 | /     fn spec_try_rfold<B, F, R>(&mut self, init: B, f: F) -> R
439 | |     where
440 | |         F: FnMut(B, Self::Item) -> R,
441 | |         R: Try<Output = B>,
    | |___________________________^ a precondition cannot be proved

error[E0999]: refinement type error
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/iterator.rs:4032:5
     |
4032 |     fn next(&mut self) -> Option<I::Item> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/iterator.rs:4038:5
     |
4038 |     fn advance_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/iterator.rs:4041:5
     |
4041 |     fn nth(&mut self, n: usize) -> Option<Self::Item> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/iterator.rs:4050:5
     |
4050 | /     fn try_fold<B, F, R>(&mut self, init: B, f: F) -> R
4051 | |     where
4052 | |         F: FnMut(B, Self::Item) -> R,
4053 | |         R: Try<Output = B>,
     | |___________________________^ a precondition cannot be proved

error[E0999]: refinement type error
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/iterator.rs:4083:5
     |
4083 | /     default fn spec_try_fold<B, F, R>(&mut self, init: B, mut f: F) -> R
4084 | |     where
4085 | |         F: FnMut(B, Self::Item) -> R,
4086 | |         R: Try<Output = B>,
     | |___________________________^ a precondition cannot be proved

error[E0999]: refinement type error
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/iter/traits/iterator.rs:4099:5
     |
4099 | /     fn spec_try_fold<B, F, R>(&mut self, init: B, f: F) -> R
4100 | |     where
4101 | |         F: FnMut(B, Self::Item) -> R,
4102 | |         R: Try<Output = B>,
     | |___________________________^ a precondition cannot be proved

error[E0999]: refinement type error
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/net/display_buffer.rs:31:28
   |
31 |         if let Some(buf) = self.buf.get_mut(self.len..(self.len + bytes.len())) {
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: unsupported statement
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/mem/mod.rs:1375:6
     |
1375 |     {builtin # offset_of($Container, $($fields)+)}
     |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
    ::: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/option.rs:819:48
     |
819  |                 (self as *const Self).byte_add(core::mem::offset_of!(Self, Some.0)).cast(),
     |                                                ----------------------------------- in this macro invocation
     |
     = note: unsupported nullary op `OffsetOf([(1, 0)])`
     = note: this error originates in the macro `core::mem::offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: unsupported statement
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/mem/mod.rs:1375:6
     |
1375 |     {builtin # offset_of($Container, $($fields)+)}
     |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
    ::: /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/option.rs:876:46
     |
876  |                 (self as *mut Self).byte_add(core::mem::offset_of!(Self, Some.0)).cast(),
     |                                              ----------------------------------- in this macro invocation
     |
     = note: unsupported nullary op `OffsetOf([(1, 0)])`
     = note: this error originates in the macro `core::mem::offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/mod.rs:253:5
    |
253 |     fn write_str(&mut self, s: &str) -> Result {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/mod.rs:257:5
    |
257 |     fn write_char(&mut self, c: char) -> Result {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/mod.rs:261:5
    |
261 |     fn write_fmt(&mut self, args: Arguments<'_>) -> Result {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/mod.rs:643:46
    |
643 |         } else if !self.pieces.is_empty() && self.pieces[0].is_empty() && pieces_length < 16 {
    |                                              ^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/mod.rs:1657:49
     |
1657 |                 let post_padding = self.padding(min - width, Alignment::Right)?;
     |                                                 ^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/mod.rs:1648:49
     |
1648 |                 let post_padding = self.padding(min - width, Alignment::Right)?;
     |                                                 ^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/mod.rs:1839:25
     |
1839 |                         nzeroes -= ZEROES.len();
     |                         ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: refinement type error
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/fmt/mod.rs:2779:19
     |
2779 |             f.pad(self.encode_utf8(&mut [0; 4]))
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/sip.rs:262:13
    |
262 |             needed = 8 - self.ntail;
    |             ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/sip.rs:281:19
    |
281 |         while i < len - left {
    |                   ^^^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:562:5
    |
562 |     fn write(&mut self, bytes: &[u8]) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:565:5
    |
565 |     fn write_u8(&mut self, i: u8) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:568:5
    |
568 |     fn write_u16(&mut self, i: u16) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:571:5
    |
571 |     fn write_u32(&mut self, i: u32) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:574:5
    |
574 |     fn write_u64(&mut self, i: u64) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:577:5
    |
577 |     fn write_u128(&mut self, i: u128) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:580:5
    |
580 |     fn write_usize(&mut self, i: usize) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:583:5
    |
583 |     fn write_i8(&mut self, i: i8) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:586:5
    |
586 |     fn write_i16(&mut self, i: i16) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:589:5
    |
589 |     fn write_i32(&mut self, i: i32) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:592:5
    |
592 |     fn write_i64(&mut self, i: i64) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:595:5
    |
595 |     fn write_i128(&mut self, i: i128) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:598:5
    |
598 |     fn write_isize(&mut self, i: isize) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:601:5
    |
601 |     fn write_length_prefix(&mut self, len: usize) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/hash/mod.rs:604:5
    |
604 |     fn write_str(&mut self, s: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: assertion might fail: possible division by zero
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/sort/stable/mod.rs:154:19
    |
154 |         let len = N / mem::size_of::<T>();
    |                   ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/sort/stable/mod.rs:157:50
    |
157 |         unsafe { core::slice::from_raw_parts_mut(self.storage.as_mut_ptr().cast(), len) }
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/cmp.rs:67:16
   |
67 |             if self[idx] != other[idx] {
   |                ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
  --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/cmp.rs:67:29
   |
67 |             if self[idx] != other[idx] {
   |                             ^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/cmp.rs:112:19
    |
112 |             match lhs[i].partial_cmp(&rhs[i]) {
    |                   ^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/cmp.rs:112:39
    |
112 |             match lhs[i].partial_cmp(&rhs[i]) {
    |                                       ^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/cmp.rs:176:19
    |
176 |             match lhs[i].cmp(&rhs[i]) {
    |                   ^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/cmp.rs:176:31
    |
176 |             match lhs[i].cmp(&rhs[i]) {
    |                               ^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1182:17
     |
1182 |                 self.count -= 1;
     |                 ^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1186:17
     |
1186 |                 self.count -= 1;
     |                 ^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1435:24
     |
1435 |             let size = self.v.len() - self.size.get() + 1;
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1463:25
     |
1463 |             let start = self.v.len() - self.size.get();
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1484:36
     |
1484 |             let ret = Some(&self.v[self.v.len() - self.size.get()..]);
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1485:32
     |
1485 |             self.v = &self.v[..self.v.len() - 1];
     |                                ^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1497:31
     |
1497 |             let ret = &self.v[end - self.size.get()..end];
     |                               ^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1498:32
     |
1498 |             self.v = &self.v[..end - 1];
     |                                ^^^^^^^

error[E0999]: assertion might fail: possible division by zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1588:21
     |
1588 |             let n = self.v.len() / self.chunk_size;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1622:25
     |
1622 |             let start = (self.v.len() - 1) / self.chunk_size * self.chunk_size;
     |                         ^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1622:25
     |
1622 |             let start = (self.v.len() - 1) / self.chunk_size * self.chunk_size;
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible remainder with a divisor of zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1650:29
     |
1650 |             let remainder = self.v.len() % self.chunk_size;
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1666:65
     |
1666 |             let (fst, snd) = unsafe { self.v.split_at_unchecked(self.v.len() - chunksz) };
     |                                                                 ^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible remainder with a divisor of zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1939:19
     |
1939 |         let rem = slice.len() % chunk_size;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1940:23
     |
1940 |         let fst_len = slice.len() - rem;
     |                       ^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:1995:17
     |
1995 |         let n = self.v.len() / self.chunk_size;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2036:46
     |
2036 |             let (fst, snd) = self.v.split_at(self.v.len() - self.chunk_size);
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible remainder with a divisor of zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2119:19
     |
2119 |         let rem = slice.len() % chunk_size;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2120:23
     |
2120 |         let fst_len = slice.len() - rem;
     |                       ^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2294:54
     |
2294 |         let num_windows = slice.len().saturating_sub(N - 1);
     |                                                      ^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2315:9
     |
2315 |         self.num -= 1;
     |         ^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2341:9
     |
2341 |         self.num -= n + 1;
     |         ^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2359:50
     |
2359 |         let ret = unsafe { &*self.slice_head.add(self.num - 1).cast::<[T; N]>() };
     |                                                  ^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2360:9
     |
2360 |         self.num -= 1;
     |         ^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2371:50
     |
2371 |         let ret = unsafe { &*self.slice_head.add(self.num - (n + 1)).cast::<[T; N]>() };
     |                                                  ^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2372:9
     |
2372 |         self.num -= n + 1;
     |         ^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2691:65
     |
2691 |             let (fst, snd) = unsafe { self.v.split_at_unchecked(len - chunksz) };
     |                                                                 ^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2702:21
     |
2702 |             let n = self.v.len() / self.chunk_size;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2722:23
     |
2722 |             let end = self.v.len() - end;
     |                       ^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible remainder with a divisor of zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2738:23
     |
2738 |             let rem = self.v.len() % self.chunk_size;
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2745:19
     |
2745 |         let end = self.v.len() - idx * self.chunk_size;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2751:61
     |
2751 |         unsafe { from_raw_parts(self.v.as_ptr().add(start), end - start) }
     |                                                             ^^^^^^^^^^^

error[E0999]: assertion might fail: possible remainder with a divisor of zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2762:29
     |
2762 |             let remainder = self.v.len() % self.chunk_size;
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:2780:23
     |
2780 |             let end = self.v.len() - offset_from_end;
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible remainder with a divisor of zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:3042:19
     |
3042 |         let rem = slice.len() % chunk_size;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:3089:46
     |
3089 |             let (fst, snd) = self.v.split_at(self.v.len() - self.chunk_size);
     |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible division by zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:3097:17
     |
3097 |         let n = self.v.len() / self.chunk_size;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:3113:44
     |
3113 |             let (fst, _) = self.v.split_at(self.v.len() - end);
     |                                            ^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:3125:19
     |
3125 |         let end = self.v.len() - idx * self.chunk_size;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:3126:21
     |
3126 |         let start = end - self.chunk_size;
     |                     ^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:3155:25
     |
3155 |             let start = self.v.len() - offset;
     |                         ^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible remainder with a divisor of zero
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/iter.rs:3224:19
     |
3224 |         let rem = slice.len() % chunk_size;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: refinement type error
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/slice/mod.rs:4954:9
     |
4954 |         &mut []
     |         ^^^^^^^ a postcondition cannot be proved

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:196:38
    |
196 |                 self.front_offset += pre_len - len;
    |                                      ^^^^^^^^^^^^^

error[E0999]: unsupported terminator call
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:299:9
    |
299 |         self.0.next()
    |         ^^^^^^^^^^^^^
    |
    = note: unsupported type `?1t`

error[E0999]: unsupported terminator call
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:304:9
    |
304 |         self.0.size_hint()
    |         ^^^^^^^^^^^^^^^^^^
    |
    = note: unsupported type `?1t`

error[E0999]: unsupported terminator call
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:309:9
    |
309 |         self.0.count()
    |         ^^^^^^^^^^^^^^
    |
    = note: unsupported type `?1t`

error[E0999]: unsupported terminator call
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:314:9
    |
314 |         self.0.last()
    |         ^^^^^^^^^^^^^
    |
    = note: unsupported type `?1t`

error[E0999]: unsupported terminator call
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:319:9
    |
319 |         self.0.nth(n)
    |         ^^^^^^^^^^^^^
    |
    = note: unsupported type `?1t`

error[E0999]: unsupported terminator call
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:366:18
    |
366 |         unsafe { self.0.__iterator_get_unchecked(idx) }
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: unsupported type `?1t`

error[E0999]: unsupported terminator call
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:374:9
    |
374 |         self.0.next_back()
    |         ^^^^^^^^^^^^^^^^^^
    |
    = note: unsupported type `?1t`

error[E0999]: unsupported terminator call
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:395:9
    |
395 |         self.0.len()
    |         ^^^^^^^^^^^^
    |
    = note: unsupported type `?1t`

error[E0999]: unsupported terminator call
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:400:9
    |
400 |         self.0.is_empty()
    |         ^^^^^^^^^^^^^^^^^
    |
    = note: unsupported type `?1t`

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:653:45
    |
653 |             if self.allow_trailing_empty || self.end - self.start > 0 {
    |                                             ^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:954:17
    |
954 |                 self.count -= 1;
    |                 ^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:972:17
    |
972 |                 self.count -= 1;
    |                 ^^^^^^^^^^^^^^^

error[E0999]: unsupported terminator call
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:1177:9
     |
1177 |         self.0.next()
     |         ^^^^^^^^^^^^^
     |
     = note: unsupported type `?0t`

error[E0999]: unsupported terminator call
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:1182:9
     |
1182 |         self.0.size_hint()
     |         ^^^^^^^^^^^^^^^^^^
     |
     = note: unsupported type `?0t`

error[E0999]: unsupported terminator call
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:1195:9
     |
1195 |         self.0.next_back()
     |         ^^^^^^^^^^^^^^^^^^
     |
     = note: unsupported type `?0t`

error[E0999]: unsupported terminator call
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:1367:9
     |
1367 |         self.inner.next()
     |         ^^^^^^^^^^^^^^^^^
     |
     = note: unsupported type `?0t`

error[E0999]: unsupported terminator call
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:1372:9
     |
1372 |         self.inner.size_hint()
     |         ^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: unsupported type `?0t`

error[E0999]: unsupported terminator call
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:1385:9
     |
1385 |         self.inner.next_back()
     |         ^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: unsupported type `?0t`

error[E0999]: refinement type error
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/iter.rs:1519:21
     |
1519 |             let n = ch.encode_utf16(&mut buf).len();
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: unsupported terminator args
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/traits.rs:855:13
    |
855 |             "true" => Ok(true),
    |             ^^^^^^
    |
    = note: unsupported constant `const "true"`

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:421:28
    |
421 |             self.finger += old_len - iter.iter.len();
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:438:71
    |
438 |             let last_byte = unsafe { *self.utf8_encoded.get_unchecked(self.utf8_size() - 1) };
    |                                                                       ^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:459:38
    |
459 |                     let found_char = self.finger - self.utf8_size();
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:488:33
    |
488 |             self.finger_back -= old_len - iter.iter.len();
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:488:13
    |
488 |             self.finger_back -= old_len - iter.iter.len();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:506:71
    |
506 |             let last_byte = unsafe { *self.utf8_encoded.get_unchecked(self.utf8_size() - 1) };
    |                                                                       ^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:517:29
    |
517 |                 let shift = self.utf8_size() - 1;
    |                             ^^^^^^^^^^^^^^^^^^^^

error[E0999]: refinement type error
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:665:5
    |
665 |     fn matches(&mut self, c: char) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:706:28
    |
706 |             let char_len = pre_len - len;
    |                            ^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:726:28
    |
726 |             let char_len = pre_len - len;
    |                            ^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1250:29
     |
1250 | ...                   a -= 1;
     |                       ^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1232:25
     |
1232 |                         searcher.end -= ch.len_utf8();
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1446:44
     |
1446 |                 period: cmp::max(crit_pos, needle.len() - crit_pos) + 1,
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1418:33
     |
1418 |               let crit_pos_back = needle.len()
     |  _________________________________^
1419 | |                 - cmp::max(
1420 | |                     TwoWaySearcher::reverse_maximal_suffix(needle, period, false),
1421 | |                     TwoWaySearcher::reverse_maximal_suffix(needle, period, true),
1422 | |                 );
     | |_________________^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1521:20
     |
1521 |                 if needle[i] != haystack[self.position + i] {
     |                    ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1521:33
     |
1521 |                 if needle[i] != haystack[self.position + i] {
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1510:38
     |
1510 |                     self.position += i - self.crit_pos + 1;
     |                                      ^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1509:20
     |
1509 |                 if needle[i] != haystack[self.position + i] {
     |                    ^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1509:33
     |
1509 |                 if needle[i] != haystack[self.position + i] {
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1524:25
     |
1524 |                         self.memory = needle.len() - self.period;
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1479:27
     |
1479 |         let needle_last = needle.len() - 1;
     |                           ^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1597:33
     |
1597 |                     self.end -= self.crit_pos_back - i;
     |                                 ^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1597:21
     |
1597 |                     self.end -= self.crit_pos_back - i;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1608:20
     |
1608 |                 if needle[i] != haystack[self.end - needle.len() + i] {
     |                    ^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1608:42
     |
1608 |                 if needle[i] != haystack[self.end - needle.len() + i] {
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1608:33
     |
1608 |                 if needle[i] != haystack[self.end - needle.len() + i] {
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1596:20
     |
1596 |                 if needle[i] != haystack[self.end - needle.len() + i] {
     |                    ^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1596:42
     |
1596 |                 if needle[i] != haystack[self.end - needle.len() + i] {
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1582:17
     |
1582 |                 self.end -= needle.len();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1596:33
     |
1596 |                 if needle[i] != haystack[self.end - needle.len() + i] {
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1618:29
     |
1618 |             let match_pos = self.end - needle.len();
     |                             ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1620:13
     |
1620 |             self.end -= needle.len();
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1609:21
     |
1609 |                     self.end -= self.period;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1651:21
     |
1651 |             let b = arr[left + offset];
     |                     ^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1697:21
     |
1697 |             let a = arr[n - (1 + right + offset)];
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: assertion might fail: possible out-of-bounds access
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/pattern.rs:1698:21
     |
1698 |             let b = arr[n - (1 + left + offset)];
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: refinement type error
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/str/mod.rs:2815:18
     |
2815 |         unsafe { from_utf8_unchecked_mut(&mut []) }
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/time.rs:699:17
    |
699 |                 self.nanos.as_inner() + NANOS_PER_SEC - rhs.nanos.as_inner()
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/time.rs:696:17
    |
696 |                 self.nanos.as_inner() - rhs.nanos.as_inner()
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/time.rs:1514:28
     |
1514 |               let rem_mask = (1 << nanos_offset) - 1;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^
...
1603 | /         try_from_secs!(
1604 | |             secs = secs,
1605 | |             mantissa_bits = 23,
1606 | |             exponent_bits = 8,
...    |
1609 | |             double_ty = u64,
1610 | |         )
     | |_________- in this macro invocation
     |
     = note: this error originates in the macro `try_from_secs` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/time.rs:1495:28
     |
1495 |               let rem_mask = (1 << nanos_offset) - 1;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^
...
1603 | /         try_from_secs!(
1604 | |             secs = secs,
1605 | |             mantissa_bits = 23,
1606 | |             exponent_bits = 8,
...    |
1609 | |             double_ty = u64,
1610 | |         )
     | |_________- in this macro invocation
     |
     = note: this error originates in the macro `try_from_secs` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/time.rs:1514:28
     |
1514 |               let rem_mask = (1 << nanos_offset) - 1;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^
...
1679 | /         try_from_secs!(
1680 | |             secs = secs,
1681 | |             mantissa_bits = 52,
1682 | |             exponent_bits = 11,
...    |
1685 | |             double_ty = u128,
1686 | |         )
     | |_________- in this macro invocation
     |
     = note: this error originates in the macro `try_from_secs` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: arithmetic operation may overflow
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/time.rs:1495:28
     |
1495 |               let rem_mask = (1 << nanos_offset) - 1;
     |                              ^^^^^^^^^^^^^^^^^^^^^^^
...
1679 | /         try_from_secs!(
1680 | |             secs = secs,
1681 | |             mantissa_bits = 52,
1682 | |             exponent_bits = 11,
...    |
1685 | |             double_ty = u128,
1686 | |         )
     | |_________- in this macro invocation
     |
     = note: this error originates in the macro `try_from_secs` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0999]: arithmetic operation may overflow
   --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/escape.rs:203:21
    |
203 |         usize::from(self.alive.end - self.alive.start)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0999]: refinement type error
    --> /Users/Exelica/Downloads/project/flux-verify-std/library/core/src/../../portable-simd/crates/core_simd/src/vector.rs:1016:9
     |
1016 |         self.as_mut_array()
     |         ^^^^^^^^^^^^^^^^^^^ a postcondition cannot be proved

error: could not compile `core` (lib) due to 392 previous errors
